{"version":3,"file":"static/webpack/static/development/pages/index.js.8a4b22c8a3b65a7d6ea7.hot-update.js","sources":["webpack:///./components/Modal.js"],"sourcesContent":["import * as React from \"react\";\n\nimport { Portal } from \"./Portal\";\n\nexport class Modal extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = { opened: false };\n  }\n\n  open = () => {\n    this.setState({ opened: true });\n  };\n\n  close = () => {\n    this.setState({ opened: false });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <button type=\"button\" onClick={this.open}>\n          Open Modal\n        </button>\n        {this.state.opened && (\n          <Portal selector=\"#toast\">\n            <div className=\"overlay\">\n              <div className=\"modal\">\n                <p>\n                  This modal is rendered using{\" \"}\n                  <a href=\"https://reactjs.org/docs/portals.html\">portals</a>.\n                </p>\n                <button type=\"button\" onClick={this.close}>\n                  Close Modal\n                </button>\n              </div>\n              <style jsx global>{`\n                body {\n                  overflow: hidden;\n                }\n              `}</style>\n              <style jsx>{`\n                .overlay {\n                  position: fixed;\n                  background-color: rgba(0, 0, 0, 0.7);\n                  top: 0;\n                  right: 0;\n                  bottom: 0;\n                  left: 0;\n                }\n\n                .modal {\n                  background-color: white;\n                  position: absolute;\n                  top: 10%;\n                  right: 10%;\n                  bottom: 10%;\n                  left: 10%;\n                  padding: 1em;\n                }\n              `}</style>\n            </div>\n          </Portal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AACA;AAVA;AAAA;AAAA;AAFA;AAGA;AACA;AALA;AAAA;AAAA;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AA9DA;AACA;AADA;AAAA;;;;A","sourceRoot":""}